{
  "openapi": "3.0.0",
  "info": {
    "title": "Metrade API",
    "description": "This API is used for managing users, products, orders, order items, carts, cart items, token.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Local development server"
    }
  ],
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          },
          "phone": {
            "type": "string",
            "example": "+123456789"
          },
          "balance": {
            "type": "number",
            "example": 1000
          },
          "role": {
            "type": "string",
            "enum": [
              "user",
              "admin",
              "seller"
            ],
            "example": "user"
          },
          "photo_url": {
            "type": "string",
            "example": "https://example.com/images/user.png"
          },
          "is_verified": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "banned",
              "deleted"
            ],
            "example": "active"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Laptop"
          },
          "description": {
            "type": "string",
            "example": "A powerful laptop for developers."
          },
          "price": {
            "type": "number",
            "example": 1200
          },
          "stock_quantity": {
            "type": "number",
            "example": 10
          },
          "pickup_point": {
            "type": "string",
            "enum": [
              "Myllypuro",
              "Karamalmi",
              "Myyrmäki"
            ],
            "example": "Myllypuro"
          },
          "status": {
            "type": "string",
            "enum": [
              "processing",
              "active",
              "sold"
            ],
            "example": "active"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "example": "60d5f489f9e7c4a5d37fbe29",
            "description": "Reference to the User ID"
          },
          "total_item_quantity": {
            "type": "number",
            "example": 5,
            "description": "Total number of items in the order"
          },
          "total_price": {
            "type": "number",
            "example": 200.5,
            "description": "Total price of the order"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2024-10-04T08:40:51.620Z",
            "description": "Order creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2024-10-04T09:00:51.620Z",
            "description": "Order update timestamp"
          }
        }
      },
      "OrderItem": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "string",
            "example": "60d5f489f9e7c4a5d37fbe29",
            "description": "Reference to the Order ID"
          },
          "product_id": {
            "type": "string",
            "example": "60d5f489f9e7c4a5d37fbe28",
            "description": "Reference to the Product ID"
          },
          "product_name": {
            "type": "string",
            "example": "Laptop"
          },
          "image": {
            "type": "string",
            "example": "https://example.com/images/laptop.png"
          },
          "sold_quantity": {
            "type": "number",
            "example": 2
          },
          "price": {
            "type": "number",
            "example": 1200
          },
          "pickup_point": {
            "type": "string",
            "enum": [
              "Myllypuro",
              "Karamalmi",
              "Myyrmäki"
            ],
            "example": "Myllypuro"
          },
          "sub_total": {
            "type": "number",
            "example": 2400,
            "description": "Calculated as sold_quantity * price"
          },
          "selling_status": {
            "type": "string",
            "enum": [
              "processing",
              "await-pickup",
              "delivered",
              "cancelled"
            ],
            "example": "processing"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2024-10-04T08:40:51.620Z",
            "description": "OrderItem creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2024-10-04T09:00:51.620Z",
            "description": "OrderItem update timestamp"
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Electronics",
            "description": "The name of the category"
          },
          "description": {
            "type": "string",
            "example": "Category for all electronic products",
            "description": "Description of the category"
          },
          "parent_id": {
            "type": "string",
            "example": "60d5f489f9e7c4a5d37fbe28",
            "description": "Reference to the parent category ID"
          },
          "ancestors": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "References to all ancestor categories"
            },
            "example": [
              "60d5f489f9e7c4a5d37fbe27",
              "60d5f489f9e7c4a5d37fbe26"
            ],
            "description": "Array of ancestor categories"
          },
          "children": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "References to direct child categories"
            },
            "example": [
              "60d5f489f9e7c4a5d37fbe29",
              "60d5f489f9e7c4a5d37fbe30"
            ],
            "description": "Array of direct child categories"
          },
          "is_active": {
            "type": "boolean",
            "example": true,
            "description": "Indicates whether the category is active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2024-10-04T08:40:51.620Z",
            "description": "Category creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2024-10-04T09:00:51.620Z",
            "description": "Category update timestamp"
          }
        }
      },
      "Cart": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "example": "60d5f489f9e7c4a5d37fbe28",
            "description": "Reference to the User ID"
          },
          "cart_items": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "References to CartItem IDs"
            },
            "example": [
              "60d5f489f9e7c4a5d37fbe29",
              "60d5f489f9e7c4a5d37fbe30"
            ],
            "description": "Array of CartItem references"
          },
          "is_active": {
            "type": "boolean",
            "example": true,
            "description": "Indicates whether the cart is active"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "example": "2024-10-04T09:00:51.620Z",
            "description": "Timestamp of when the cart was deleted (soft deletion)"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2024-10-04T08:40:51.620Z",
            "description": "Cart creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2024-10-04T09:00:51.620Z",
            "description": "Cart update timestamp"
          }
        }
      },
      "CartItem": {
        "type": "object",
        "properties": {
          "cart_id": {
            "type": "string",
            "example": "60d5f489f9e7c4a5d37fbe28",
            "description": "Reference to the Cart ID"
          },
          "product_id": {
            "type": "string",
            "example": "60d5f489f9e7c4a5d37fbe29",
            "description": "Reference to the Product ID"
          },
          "adding_quantity": {
            "type": "number",
            "example": 2,
            "description": "The quantity of the product being added to the cart"
          },
          "limit_quantity": {
            "type": "number",
            "example": 10,
            "description": "The maximum quantity of the product allowed in the cart"
          },
          "sub_total": {
            "type": "number",
            "example": 100,
            "description": "Calculated as adding_quantity * price"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "deactive"
            ],
            "example": "active",
            "description": "The status of the cart item"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "example": "2024-10-04T09:00:51.620Z",
            "description": "Timestamp of when the cart item was deleted"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2024-10-04T08:40:51.620Z",
            "description": "Cart item creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2024-10-04T09:00:51.620Z",
            "description": "Cart item update timestamp"
          }
        }
      }
    },
    "securitySchemes": {
      "accessTokenCookie": {
        "type": "apiKey",
        "in": "cookie",
        "name": "accessToken"
      },
      "refreshTokenCookie": {
        "type": "apiKey",
        "in": "cookie",
        "name": "refreshToken"
      }
    }
  },
  "security": [
    {
      "accessTokenCookie": [],
      "refreshTokenCookie": []
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register a new user",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "default": "test@metropolia.fi"
                  },
                  "password": {
                    "type": "string",
                    "default": "password"
                  }
                },
                "required": [
                  "first_name",
                  "last_name",
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        },
                        "cart": {
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or user already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/verify": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Verify user email",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "default": "test@metropolia.fi"
                  }
                },
                "required": [
                  "token",
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "updatedUser": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User already verified or invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found or token invalid/expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/resend-verification-email": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Resend verification email",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "default": "test@metropolia.fi"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Verification email resent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid email format or user already verified",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login user",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "default": "test@metropolia.fi"
                  },
                  "password": {
                    "type": "string",
                    "default": "password"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "first_name": {
                          "type": "string"
                        },
                        "last_name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "photo_url": {
                          "type": "string"
                        },
                        "is_verified": {
                          "type": "boolean"
                        },
                        "phone": {
                          "type": "string"
                        },
                        "balance": {
                          "type": "number"
                        },
                        "card_id": {
                          "type": "string"
                        },
                        "token_expired_at": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid email or password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Logout user",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "default": "670154eda0f091fa500887ea"
                  }
                },
                "required": [
                  "userId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/order-history": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get order history",
        "security": [
          {
            "accessTokenCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pickup",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order history retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "totalOrder": {
                          "type": "integer"
                        },
                        "limit": {
                          "type": "integer"
                        },
                        "orderItemList": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/OrderItem"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid User Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order history not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/orders/": {
      "get": {
        "tags": [
          "Admin Orders"
        ],
        "summary": "Get all order items",
        "security": [
          {
            "accessTokenCookie": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order items retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "totalItems": {
                      "type": "integer"
                    },
                    "limit": {
                      "type": "integer"
                    },
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No Order Exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/orders/{orderItemId}": {
      "put": {
        "tags": [
          "Admin Orders"
        ],
        "summary": "Update order item status",
        "security": [
          {
            "accessTokenCookie": []
          }
        ],
        "parameters": [
          {
            "name": "orderItemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "selling_status": {
                    "type": "string",
                    "default": "await-pickup"
                  }
                },
                "required": [
                  "selling_status"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order item status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/OrderItem"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/orders/stats": {
      "get": {
        "tags": [
          "Admin Orders"
        ],
        "summary": "Get order item statistics",
        "security": [
          {
            "accessTokenCookie": []
          }
        ],
        "responses": {
          "200": {
            "description": "Order item statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/OrderStats"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cart/add-cart-item": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Add a product to the cart",
        "security": [
          {
            "accessTokenCookie": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "product": {
                    "$ref": "#/components/schemas/Product"
                  },
                  "adding_quantity": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "product",
                  "adding_quantity"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product added to cart successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "limit_quantity": {
                      "type": "number",
                      "example": 3
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid product or quantity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid Product Id"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to add product to cart"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cart/get-cart-item": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Get specific cart item info",
        "security": [
          {
            "accessTokenCookie": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "product_id": {
                    "type": "string",
                    "example": "670154eda0f091fa500887ea"
                  }
                },
                "required": [
                  "product_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cart item information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Get cart item info successfully"
                    },
                    "cartItem": {
                      "$ref": "#/components/schemas/CartItem"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cart or cart item not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "No valid cart item"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cart/get-cart-detail": {
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "Get cart details including all items",
        "security": [
          {
            "accessTokenCookie": []
          }
        ],
        "responses": {
          "200": {
            "description": "Cart details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Get cart item info successfully"
                    },
                    "cart_detail": {
                      "$ref": "#/components/schemas/Cart"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cart/update-quantity": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Update quantity of a cart item",
        "security": [
          {
            "accessTokenCookie": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cart_item": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "670154eda0f091fa500887ea"
                      },
                      "quantity": {
                        "type": "number",
                        "example": 1
                      }
                    },
                    "required": [
                      "id",
                      "quantity"
                    ]
                  }
                },
                "required": [
                  "cart_item"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cart item quantity updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Updated quantity successfully"
                    },
                    "cart_item": {
                      "$ref": "#/components/schemas/CartItem"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid item id or quantity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad request! Invalid Item Id or Lack of quantity"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cart/delete-cart-item/{id}": {
      "delete": {
        "tags": [
          "Cart"
        ],
        "summary": "Delete an item from the cart",
        "security": [
          {
            "accessTokenCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "670154eda0f091fa500887ea"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cart item deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Delete cart item successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cart item not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Fail to delete cart item"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cart/checkout": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Checkout the cart",
        "security": [
          {
            "accessTokenCookie": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "checkout": {
                    "type": "object",
                    "properties": {
                      "total_items": {
                        "type": "number",
                        "example": 5
                      },
                      "total_price": {
                        "type": "number",
                        "example": 150.75
                      },
                      "order_items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "example": "670154eda0f091fa500887ea"
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "total_items",
                      "total_price",
                      "order_items"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Checkout successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Checkout successful and stock updated"
                    },
                    "order": {
                      "$ref": "#/components/schemas/Order"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Not enough balance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Not enough balance"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Product in processing, cannot be checked out",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Product in processing"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error during checkout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Error during checkout"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/profile/detail": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user profile details",
        "security": [
          {
            "accessTokenCookie": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User Info found"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid User ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid User Id"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "User Information not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/profile/update": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update user profile",
        "security": [
          {
            "accessTokenCookie": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string",
                    "example": "John"
                  },
                  "last_name": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "phone": {
                    "type": "string",
                    "example": "+1234567890"
                  },
                  "current_password": {
                    "type": "string",
                    "example": "oldPassword123"
                  },
                  "new_password": {
                    "type": "string",
                    "example": "newPassword123"
                  },
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User Info updated"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid User ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid User Id"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Server error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/token/get-access-token": {
      "post": {
        "tags": [
          "Token"
        ],
        "summary": "Get a new access token using a refresh token",
        "security": [
          {
            "accessTokenCookie": []
          }
        ],
        "responses": {
          "200": {
            "description": "New access token generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "New access token generated"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "670154eda0f091fa500887ea"
                        },
                        "first_name": {
                          "type": "string",
                          "example": "John"
                        },
                        "last_name": {
                          "type": "string",
                          "example": "Doe"
                        },
                        "email": {
                          "type": "string",
                          "example": "john.doe@example.com"
                        },
                        "role": {
                          "type": "string",
                          "example": "user"
                        },
                        "photo_url": {
                          "type": "string",
                          "example": "/uploads/avatar.jpg"
                        },
                        "is_verified": {
                          "type": "boolean",
                          "example": true
                        },
                        "phone": {
                          "type": "string",
                          "example": "+1234567890"
                        },
                        "balance": {
                          "type": "number",
                          "example": 100.5
                        },
                        "card_id": {
                          "type": "string",
                          "example": "670154eda0f091fa500887ea"
                        },
                        "token_expired_at": {
                          "type": "integer",
                          "example": 1693779134000
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No refresh token provided or invalid/expired refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "No refresh token provided"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/product/newsfeed": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get all products",
        "security": [],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 8
            },
            "description": "Number of products per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Products retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "products": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    },
                    "totalProducts": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid page or limit parameter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No products found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/product/search": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Search for products",
        "security": [],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Search query"
          }
        ],
        "responses": {
          "200": {
            "description": "Products retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No products found matching the query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/product/detail/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get product detail by ID",
        "security": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Product retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "product": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid product ID format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "Product": {
          "type": "object",
          "properties": {
            "user_id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "image": {
              "type": "string"
            },
            "photos": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": {
              "type": "string"
            },
            "price": {
              "type": "number"
            },
            "pickup_point": {
              "type": "string",
              "enum": [
                "Myllypuro",
                "Karamalmi",
                "Myyrmäki"
              ]
            },
            "category_id": {
              "type": "string"
            },
            "stock_quantity": {
              "type": "number"
            },
            "status": {
              "type": "string",
              "enum": [
                "processing",
                "active",
                "sold"
              ]
            },
            "deleted_at": {
              "type": "string",
              "format": "date-time"
            },
            "keywords": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      }
    },
    "/seller/upload": {
      "post": {
        "tags": [
          "Sellers"
        ],
        "summary": "Upload a new product",
        "security": [
          {
            "accessTokenCookie": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              },
              "example": {
                "user_id": "66fc69851c83d6b430f8a4f7",
                "name": "Laptop",
                "image": "http://example.com/image.jpg",
                "photos": [
                  "http://example.com/photo1.jpg",
                  "http://example.com/photo2.jpg"
                ],
                "description": "A powerful laptop for developers.",
                "price": 1200,
                "pickup_point": "Myllypuro",
                "category_id": "66e341dd97aaa45c6b839f81",
                "keywords": [
                  "laptop",
                  "developer",
                  "powerful"
                ],
                "stock_quantity": 10,
                "status": "active"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "product": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid User Id or Category Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error uploading product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/seller/imageUpload": {
      "post": {
        "tags": [
          "Sellers"
        ],
        "summary": "Upload new product images",
        "security": [
          {
            "accessTokenCookie": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Images uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "urls": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error uploading images",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/seller/selling-page/inventory/{userId}": {
      "get": {
        "tags": [
          "Sellers"
        ],
        "summary": "Get products by user ID",
        "security": [
          {
            "accessTokenCookie": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Products retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No products found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/seller/update/{id}": {
      "put": {
        "tags": [
          "Sellers"
        ],
        "summary": "Update product details",
        "security": [
          {
            "accessTokenCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              },
              "example": {
                "name": "Laptop",
                "image": "http://example.com/image.jpg",
                "photos": [
                  "http://example.com/photo1.jpg",
                  "http://example.com/photo2.jpg"
                ],
                "description": "A powerful laptop for developers.",
                "price": 1200,
                "pickup_point": "Myllypuro",
                "category_id": "60d0fe4f5311236168a109cb",
                "keywords": [
                  "laptop",
                  "developer",
                  "powerful"
                ],
                "stock_quantity": 10,
                "status": "active"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "product": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Category Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error updating product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories/main-category/main-relationship": {
      "get": {
        "tags": [
          "Category"
        ],
        "security": [],
        "summary": "Get main categories with hierarchy",
        "operationId": "categoryHierarchy",
        "responses": {
          "200": {
            "description": "List of categories with hierarchy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No main categories found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/categories/get-children-categories/{categoryId}": {
      "get": {
        "tags": [
          "Category"
        ],
        "security": [],
        "summary": "Get child categories and products",
        "operationId": "getChildrenProducts",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the category to retrieve children for"
          }
        ],
        "responses": {
          "200": {
            "description": "List of products in the category and its children",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Category not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/users": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get all users",
        "operationId": "getAllUsers",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/admin/users/count": {
      "get": {
        "summary": "Get user count",
        "tags": [
          "Admin"
        ],
        "operationId": "getAllUserCount",
        "responses": {
          "200": {
            "description": "User count by status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "allUsersCount": {
                      "type": "integer"
                    },
                    "activeUserCount": {
                      "type": "integer"
                    },
                    "bannedUserCount": {
                      "type": "integer"
                    },
                    "deletedUserCount": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/users/{id}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Update user status",
        "operationId": "updateUserStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User status updated"
          }
        }
      }
    },
    "/admin/product": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get all products",
        "operationId": "adminGetAllProducts",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of products",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        }
      }
    },
    "/admin/product/counts": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get product counts by status",
        "operationId": "adminGetProductCounts",
        "responses": {
          "200": {
            "description": "Product counts by status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "activeCount": {
                      "type": "integer"
                    },
                    "processingCount": {
                      "type": "integer"
                    },
                    "soldCount": {
                      "type": "integer"
                    },
                    "allCount": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/product/activate/{id}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Activate a product",
        "operationId": "activateProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product activated successfully"
          }
        }
      }
    },
    "/admin/product/delete/{id}": {
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "Delete a product",
        "operationId": "deleteProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully"
          }
        }
      }
    }
  }
}